resources:
  - name: tracker
    type: tracker
    source:
      token: {{tracker-token}}
      project_id: {{tracker-project-id}}
      tracker_url: https://www.pivotaltracker.com
  - name: repo-develop
    type: git
    source:
      uri: git@github.com:sunilpp/concourse-ci-demo.git
      branch: develop
      private_key: {{github-private-key}}
    check_every: 10s # for demo
  - name: repo-release
    type: git
    source:
      uri: git@github.com:sunilpp/concourse-ci-demo.git
      branch: release
      private_key: {{github-private-key}}
    check_every: 10s # for demo
  - name: repo-master
    type: git
    source:
      uri: git@github.com:sunilpp/concourse-ci-demo.git
      branch: master
      private_key: {{github-private-key}}
    check_every: 10s # for demo
  - name: version
    type: semver
    source:
      uri: git@github.com:sunilpp/concourse-ci-demo.git
      branch: version
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 0.5.0
  - name: cf-prod
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-prod}}
      skip_cert_check: true
  - name: cf-staging
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-staging}}
      skip_cert_check: true
  - name: cf-dev
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space-dev}}
      skip_cert_check: true
  - name: m2
    type: docker-image
    source:
      repository: making/m2
      # username: {-{docker-username}}
      # password: {-{docker-password}}
      # email: {-{docker-email}}

jobs:
  - name: test-develop
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-develop
          trigger: true
        - get: m2
      - task: unit
        file: repo/ci/tasks/unit.yml
      - put: tracker
        params:
          repos:
          - repo

  - name: deploy-develop
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-develop
          passed: [ test-develop ]
          trigger: true
      - task: build
        file: repo/ci/tasks/build.yml
      - put: cf-dev
        params:
          manifest: repo/manifest-dev.yml
          path: output/demo.jar
          current_app_name: concourse-ci-demo-dev

  - name: test-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-release
          trigger: true
        - get: m2
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: deploy-staging
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-release
          passed: [ test-release ]
          trigger: true
      - task: build
        file: repo/ci/tasks/build.yml
      - put: cf-staging
        params:
          manifest: repo/manifest-staging.yml
          path: output/demo.jar
          current_app_name: concourse-ci-demo-staging

  - name: merge-release-to-master
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
        - get: repo-release
          passed: [ test-release ]
      - task: merge-release-to-master
        file: repo-release/ci/tasks/merge-release-branch.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out

  - name: test-master
    serial: true
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-master
          # comment out bellow to support hotfix
          passed: [ merge-release-to-master ]
          trigger: true
        - get: m2
      - task: unit
        file: repo/ci/tasks/unit.yml

  - name: tag-master
    public: true
    plan:
      - aggregate:
        - get:  repo
          resource: repo-master
          passed: [ test-master ]
          trigger: true
        - get: repo-release
        - get: version
        - get: m2
      - task: bump-to-release-version
        file: repo-release/ci/tasks/bump-to-release-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-master
        params:
          repository: out
          tag: version/number

  - name: bump-version
    public: true
    plan:
      - aggregate:
        - get:  repo-master
          passed: [ tag-master ]
          trigger: true
        - get:  repo
          resource: repo-release
        - get: version
          params: {bump: minor}
        - get: m2
      - task: bump-to-next-develop-version
        file: repo/ci/tasks/bump-to-next-develop-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-release
        params:
          repository: out
      - put: version
        params: {file: version/number}

  - name: merge-release-to-develop
    public: true
    plan:
      - aggregate:
        - get: repo
          resource: repo-develop
        - get: repo-release
          passed: [ bump-version ]
          trigger: true
      - task: merge-release-to-develop
        file: repo-release/ci/tasks/merge-release-branch.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo
        resource: repo-develop
        params:
          repository: out

  - name: deploy-prod
    serial: true
    public: false
    plan:
      - aggregate:
        - get: m2
        - get:  repo
          resource: repo-master
          passed: [ tag-master ]
          trigger: true
      - task: build
        file: repo/ci/tasks/build.yml
      - put: cf-prod
        params:
          manifest: repo/manifest.yml
          path: output/demo.jar
          current_app_name: concourse-ci-demo

  # - name: init-m2
  #   plan:
  #     - get: repo
  #       resource: repo-release
  #     - task: build-m2
  #       config:
  #         platform: linux
  #         image_resource:
  #           type: docker-image
  #           source:
  #             repository: java
  #             tag: 8-jdk-alpine
  #         inputs:
  #           - name: repo
  #         outputs:
  #           - name: to-push
  #         run:
  #           path: sh
  #           args:
  #           - repo/ci/tasks/m2.sh
  #           - init
  #     - put: m2
  #       params:
  #         import_file: to-push/rootfs.tar
  #
  # - name: update-m2
  #   plan:
  #     - get: repo
  #       resource: repo-release
  #     - get: m2
  #     - task: build-m2
  #       config:
  #         platform: linux
  #         image_resource:
  #           type: docker-image
  #           source:
  #             repository: java
  #             tag: 8-jdk-alpine
  #         inputs:
  #           - name: repo
  #           - name: m2
  #         outputs:
  #           - name: to-push
  #         run:
  #           path: sh
  #           args:
  #           - repo/ci/tasks/m2.sh
  #     - put: m2
  #       params:
  #         import_file: to-push/rootfs.tar

